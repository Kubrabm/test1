// <auto-generated />
using System;
using BackProject.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BackProject.DAL.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BgImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeaderId")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.BestEducationTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BestEducations");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BgImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeaderId")
                        .HasColumnType("int");

                    b.Property<int?>("LatestPostId")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.HasIndex("LatestPostId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.BlogDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BgImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("CommentCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descroption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogsDetails");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.BuyNow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bacground")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeaderId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionValue")
                        .HasColumnType("int");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("BuyNows");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Catigorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Catigories");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BgImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeaderId")
                        .HasColumnType("int");

                    b.Property<string>("LocatioUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Skype")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherDetailId")
                        .HasColumnType("int");

                    b.Property<string>("TeacherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherDetailId");

                    b.HasIndex("TeacherId1");

                    b.ToTable("ContactInfos");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.CoursDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Certification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Descroption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CoursDetails");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BgImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.CoursInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Assesment")
                        .HasColumnType("int");

                    b.Property<int>("ClassDuration")
                        .HasColumnType("int");

                    b.Property<int?>("CoursDetailId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Fee")
                        .HasColumnType("int");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<int>("Skill")
                        .HasColumnType("int");

                    b.Property<int>("StartDate")
                        .HasColumnType("int");

                    b.Property<int>("Students")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursDetailId");

                    b.ToTable("CoursInfos");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Degree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherDetailId");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Employe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AboutId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImgUrl")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.ToTable("Employes");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BgImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.EventDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BgImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("HeaderId")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("HeaderId");

                    b.ToTable("EventsDetails");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Fakulty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherDetailId");

                    b.ToTable("Fakulties");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Footer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Copyright")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Footers");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.GetInTouch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FooterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FooterId");

                    b.ToTable("GetInTouch");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Header", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Headers");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Hobbi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherDetailId");

                    b.ToTable("Hobbis");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Home", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("HeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FooterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FooterId");

                    b.ToTable("Informations");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.LatestPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LatestPosts");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.NewsLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewsLetters");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Notice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AboutId")
                        .HasColumnType("int");

                    b.Property<int>("Date")
                        .HasColumnType("int");

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<int>("VideoLink")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.ToTable("Notices");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.NoticeRigt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NoticeRigts");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherDetailId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Reply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Replys");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherDetailId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.SosialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandAndFeatureId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FooterId")
                        .HasColumnType("int");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandAndFeatureId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("FooterId");

                    b.ToTable("SosialMedias");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Speaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("EventDetailId")
                        .HasColumnType("int");

                    b.Property<int>("ImgUrl")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventDetailId");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AboutId")
                        .HasColumnType("int");

                    b.Property<string>("BgImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.HasIndex("HeaderId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.TeacherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BgImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experiens")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId1")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId1");

                    b.ToTable("TeachersDetails");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.UsefulLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FlagUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FooterId")
                        .HasColumnType("int");

                    b.Property<int>("HeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FooterId");

                    b.HasIndex("HeaderId");

                    b.ToTable("UsefulLinks");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.About", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Header", null)
                        .WithMany("Abouts")
                        .HasForeignKey("HeaderId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Blog", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Header", null)
                        .WithMany("Blogs")
                        .HasForeignKey("HeaderId");

                    b.HasOne("BackProject.DAL.Entities.LatestPost", null)
                        .WithMany("Blogs")
                        .HasForeignKey("LatestPostId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.BlogDetail", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Blog", null)
                        .WithMany("BlogDetails")
                        .HasForeignKey("BlogId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.BuyNow", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Header", null)
                        .WithMany("BuyNowS")
                        .HasForeignKey("HeaderId");

                    b.HasOne("BackProject.DAL.Entities.BuyNow", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Contact", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Header", null)
                        .WithMany("Contacts")
                        .HasForeignKey("HeaderId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.ContactInfo", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.TeacherDetail", null)
                        .WithMany("ContactInfo")
                        .HasForeignKey("TeacherDetailId");

                    b.HasOne("BackProject.DAL.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.CoursDetail", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Course", null)
                        .WithMany("CoursDetails")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Course", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Header", null)
                        .WithMany("Courses")
                        .HasForeignKey("HeaderId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.CoursInfo", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.CoursDetail", null)
                        .WithMany("CoursInfos")
                        .HasForeignKey("CoursDetailId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Degree", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.TeacherDetail", null)
                        .WithMany("Degree")
                        .HasForeignKey("TeacherDetailId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Employe", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.About", null)
                        .WithMany("Employes")
                        .HasForeignKey("AboutId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.EventDetail", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Event", null)
                        .WithMany("EventDetails")
                        .HasForeignKey("EventId");

                    b.HasOne("BackProject.DAL.Entities.Header", null)
                        .WithMany("Events")
                        .HasForeignKey("HeaderId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Fakulty", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.TeacherDetail", null)
                        .WithMany("Fakulties")
                        .HasForeignKey("TeacherDetailId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.GetInTouch", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Footer", "Footer")
                        .WithMany("GetInTouches")
                        .HasForeignKey("FooterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Footer");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Hobbi", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.TeacherDetail", null)
                        .WithMany("hobbis")
                        .HasForeignKey("TeacherDetailId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Home", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Header", null)
                        .WithMany("Homes")
                        .HasForeignKey("HeaderId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Information", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Footer", "Footer")
                        .WithMany("Informations")
                        .HasForeignKey("FooterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Footer");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Notice", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.About", null)
                        .WithMany("Notices")
                        .HasForeignKey("AboutId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Position", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.TeacherDetail", null)
                        .WithMany("Positions")
                        .HasForeignKey("TeacherDetailId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Skill", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.TeacherDetail", null)
                        .WithMany("Skills")
                        .HasForeignKey("TeacherDetailId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.SosialMedia", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.EventDetail", "BrandAndFeature")
                        .WithMany()
                        .HasForeignKey("BrandAndFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackProject.DAL.Entities.ContactInfo", null)
                        .WithMany("sosialMedias")
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("BackProject.DAL.Entities.Footer", null)
                        .WithMany("SosialMedias")
                        .HasForeignKey("FooterId");

                    b.Navigation("BrandAndFeature");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Speaker", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.EventDetail", null)
                        .WithMany("Speakers")
                        .HasForeignKey("EventDetailId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Teacher", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.About", null)
                        .WithMany("Teachers")
                        .HasForeignKey("AboutId");

                    b.HasOne("BackProject.DAL.Entities.Header", null)
                        .WithMany("Teachers")
                        .HasForeignKey("HeaderId");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.TeacherDetail", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Teacher", null)
                        .WithMany("teacherDetails")
                        .HasForeignKey("TeacherId1");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.UsefulLink", b =>
                {
                    b.HasOne("BackProject.DAL.Entities.Footer", null)
                        .WithMany("usefulLinks")
                        .HasForeignKey("FooterId");

                    b.HasOne("BackProject.DAL.Entities.Header", "Header")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Header");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.About", b =>
                {
                    b.Navigation("Employes");

                    b.Navigation("Notices");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Blog", b =>
                {
                    b.Navigation("BlogDetails");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.ContactInfo", b =>
                {
                    b.Navigation("sosialMedias");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.CoursDetail", b =>
                {
                    b.Navigation("CoursInfos");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Course", b =>
                {
                    b.Navigation("CoursDetails");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Event", b =>
                {
                    b.Navigation("EventDetails");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.EventDetail", b =>
                {
                    b.Navigation("Speakers");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Footer", b =>
                {
                    b.Navigation("GetInTouches");

                    b.Navigation("Informations");

                    b.Navigation("SosialMedias");

                    b.Navigation("usefulLinks");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Header", b =>
                {
                    b.Navigation("Abouts");

                    b.Navigation("Blogs");

                    b.Navigation("BuyNowS");

                    b.Navigation("Contacts");

                    b.Navigation("Courses");

                    b.Navigation("Events");

                    b.Navigation("Homes");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.LatestPost", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.Teacher", b =>
                {
                    b.Navigation("teacherDetails");
                });

            modelBuilder.Entity("BackProject.DAL.Entities.TeacherDetail", b =>
                {
                    b.Navigation("ContactInfo");

                    b.Navigation("Degree");

                    b.Navigation("Fakulties");

                    b.Navigation("Positions");

                    b.Navigation("Skills");

                    b.Navigation("hobbis");
                });
#pragma warning restore 612, 618
        }
    }
}
